# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: consensus/maxbft/maxbft.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from chainmaker.protos.common import block_pb2 as common_dot_block__pb2
from chainmaker.protos.common import request_pb2 as common_dot_request__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1d\x63onsensus/maxbft/maxbft.proto\x12\x06maxbft\x1a\x12\x63ommon/block.proto\x1a\x14\x63ommon/request.proto\"\x82\x01\n\nQuorumCert\x12\x10\n\x08\x62lock_id\x18\x01 \x01(\x0c\x12\x0e\n\x06height\x18\x02 \x01(\x04\x12\r\n\x05level\x18\x03 \x01(\x04\x12\x10\n\x08new_view\x18\x04 \x01(\x08\x12\x10\n\x08\x65poch_id\x18\x05 \x01(\x04\x12\x1f\n\x05votes\x18\x06 \x03(\x0b\x32\x10.maxbft.VoteData\"/\n\rConsensusInfo\x12\x1e\n\x02qc\x18\x01 \x01(\x0b\x32\x12.maxbft.QuorumCert\"t\n\x08SyncInfo\x12&\n\nhighest_qc\x18\x01 \x01(\x0b\x32\x12.maxbft.QuorumCert\x12&\n\nhighest_tc\x18\x02 \x01(\x0b\x32\x12.maxbft.QuorumCert\x12\x18\n\x10highest_tc_level\x18\x03 \x01(\x04\"\xad\x01\n\x0cProposalData\x12\x1c\n\x05\x62lock\x18\x01 \x01(\x0b\x32\r.common.Block\x12\x0e\n\x06height\x18\x02 \x01(\x04\x12\r\n\x05level\x18\x03 \x01(\x04\x12\x10\n\x08proposer\x18\x04 \x01(\x0c\x12\x14\n\x0cproposer_idx\x18\x05 \x01(\x04\x12\x10\n\x08\x65poch_id\x18\x06 \x01(\x04\x12&\n\njustify_qc\x18\x07 \x01(\x0b\x32\x12.maxbft.QuorumCert\"_\n\x0bProposalMsg\x12+\n\rproposal_data\x18\x01 \x01(\x0b\x32\x14.maxbft.ProposalData\x12#\n\tsync_info\x18\x02 \x01(\x0b\x32\x10.maxbft.SyncInfo\"\xb0\x01\n\x08VoteData\x12\x10\n\x08\x62lock_id\x18\x01 \x01(\x0c\x12\x0e\n\x06height\x18\x02 \x01(\x04\x12\r\n\x05level\x18\x03 \x01(\x04\x12\x0e\n\x06\x61uthor\x18\x04 \x01(\x0c\x12\x12\n\nauthor_idx\x18\x05 \x01(\x04\x12\x10\n\x08new_view\x18\x06 \x01(\x08\x12\x10\n\x08\x65poch_id\x18\x07 \x01(\x04\x12+\n\tsignature\x18\x08 \x01(\x0b\x32\x18.common.EndorsementEntry\"S\n\x07VoteMsg\x12#\n\tvote_data\x18\x01 \x01(\x0b\x32\x10.maxbft.VoteData\x12#\n\tsync_info\x18\x02 \x01(\x0b\x32\x10.maxbft.SyncInfo\"\x95\x01\n\rBlockFetchMsg\x12\x10\n\x08\x62lock_id\x18\x01 \x01(\x0c\x12\x0e\n\x06height\x18\x02 \x01(\x04\x12\x12\n\nnum_blocks\x18\x03 \x01(\x04\x12\x12\n\nauthor_idx\x18\x04 \x01(\x04\x12\x0e\n\x06req_id\x18\x05 \x01(\x04\x12\x14\n\x0c\x63ommit_block\x18\x06 \x01(\x0c\x12\x14\n\x0clocked_bLock\x18\x07 \x01(\x0c\"I\n\tBlockPair\x12\x1c\n\x05\x62lock\x18\x01 \x01(\x0b\x32\r.common.Block\x12\x1e\n\x02qc\x18\x02 \x01(\x0b\x32\x12.maxbft.QuorumCert\"\x85\x01\n\x11\x42lockFetchRespMsg\x12(\n\x06status\x18\x01 \x01(\x0e\x32\x18.maxbft.BlockFetchStatus\x12!\n\x06\x62locks\x18\x02 \x03(\x0b\x32\x11.maxbft.BlockPair\x12\x12\n\nauthor_idx\x18\x03 \x01(\x04\x12\x0f\n\x07resp_id\x18\x04 \x01(\x04\"\xfc\x01\n\x10\x43onsensusPayload\x12!\n\x04type\x18\x01 \x01(\x0e\x32\x13.maxbft.MessageType\x12+\n\x0cproposal_msg\x18\x02 \x01(\x0b\x32\x13.maxbft.ProposalMsgH\x00\x12#\n\x08vote_msg\x18\x03 \x01(\x0b\x32\x0f.maxbft.VoteMsgH\x00\x12\x30\n\x0f\x62lock_fetch_msg\x18\x04 \x01(\x0b\x32\x15.maxbft.BlockFetchMsgH\x00\x12\x39\n\x14\x62lock_fetch_resp_msg\x18\x05 \x01(\x0b\x32\x19.maxbft.BlockFetchRespMsgH\x00\x42\x06\n\x04\x64\x61ta\"g\n\x0c\x43onsensusMsg\x12)\n\x07payload\x18\x01 \x01(\x0b\x32\x18.maxbft.ConsensusPayload\x12,\n\nsign_entry\x18\x02 \x01(\x0b\x32\x18.common.EndorsementEntry\"F\n\rBuildProposal\x12\x0e\n\x06height\x18\x01 \x01(\x04\x12\x10\n\x08pre_hash\x18\x02 \x01(\x0c\x12\x13\n\x0bis_proposer\x18\x03 \x01(\x08\"q\n\x08WalEntry\x12!\n\x03msg\x18\x01 \x01(\x0b\x32\x14.maxbft.ConsensusMsg\x12%\n\x08msg_type\x18\x02 \x01(\x0e\x32\x13.maxbft.MessageType\x12\x1b\n\x13last_snapshot_index\x18\x03 \x01(\x04*8\n\x10\x42lockFetchStatus\x12\r\n\tSUCCEEDED\x10\x00\x12\x15\n\x11NOT_ENOUGH_BLOCKS\x10\x01*T\n\rConsStateType\x12\x0e\n\nNEW_HEIGHT\x10\x00\x12\r\n\tNEW_LEVEL\x10\x01\x12\x0b\n\x07PROPOSE\x10\x02\x12\x08\n\x04VOTE\x10\x03\x12\r\n\tPACEMAKER\x10\x04*l\n\x0bMessageType\x12\x14\n\x10PROPOSAL_MESSAGE\x10\x00\x12\x10\n\x0cVOTE_MESSAGE\x10\x01\x12\x17\n\x13\x42LOCK_FETCH_MESSAGE\x10\x02\x12\x1c\n\x18\x42LOCK_FETCH_RESP_MESSAGE\x10\x03\x42Y\n\"org.chainmaker.pb.consensus.maxbftZ3chainmaker.org/chainmaker/pb-go/v2/consensus/maxbftb\x06proto3')

_BLOCKFETCHSTATUS = DESCRIPTOR.enum_types_by_name['BlockFetchStatus']
BlockFetchStatus = enum_type_wrapper.EnumTypeWrapper(_BLOCKFETCHSTATUS)
_CONSSTATETYPE = DESCRIPTOR.enum_types_by_name['ConsStateType']
ConsStateType = enum_type_wrapper.EnumTypeWrapper(_CONSSTATETYPE)
_MESSAGETYPE = DESCRIPTOR.enum_types_by_name['MessageType']
MessageType = enum_type_wrapper.EnumTypeWrapper(_MESSAGETYPE)
SUCCEEDED = 0
NOT_ENOUGH_BLOCKS = 1
NEW_HEIGHT = 0
NEW_LEVEL = 1
PROPOSE = 2
VOTE = 3
PACEMAKER = 4
PROPOSAL_MESSAGE = 0
VOTE_MESSAGE = 1
BLOCK_FETCH_MESSAGE = 2
BLOCK_FETCH_RESP_MESSAGE = 3


_QUORUMCERT = DESCRIPTOR.message_types_by_name['QuorumCert']
_CONSENSUSINFO = DESCRIPTOR.message_types_by_name['ConsensusInfo']
_SYNCINFO = DESCRIPTOR.message_types_by_name['SyncInfo']
_PROPOSALDATA = DESCRIPTOR.message_types_by_name['ProposalData']
_PROPOSALMSG = DESCRIPTOR.message_types_by_name['ProposalMsg']
_VOTEDATA = DESCRIPTOR.message_types_by_name['VoteData']
_VOTEMSG = DESCRIPTOR.message_types_by_name['VoteMsg']
_BLOCKFETCHMSG = DESCRIPTOR.message_types_by_name['BlockFetchMsg']
_BLOCKPAIR = DESCRIPTOR.message_types_by_name['BlockPair']
_BLOCKFETCHRESPMSG = DESCRIPTOR.message_types_by_name['BlockFetchRespMsg']
_CONSENSUSPAYLOAD = DESCRIPTOR.message_types_by_name['ConsensusPayload']
_CONSENSUSMSG = DESCRIPTOR.message_types_by_name['ConsensusMsg']
_BUILDPROPOSAL = DESCRIPTOR.message_types_by_name['BuildProposal']
_WALENTRY = DESCRIPTOR.message_types_by_name['WalEntry']
QuorumCert = _reflection.GeneratedProtocolMessageType('QuorumCert', (_message.Message,), {
  'DESCRIPTOR' : _QUORUMCERT,
  '__module__' : 'consensus.maxbft.maxbft_pb2'
  # @@protoc_insertion_point(class_scope:maxbft.QuorumCert)
  })
_sym_db.RegisterMessage(QuorumCert)

ConsensusInfo = _reflection.GeneratedProtocolMessageType('ConsensusInfo', (_message.Message,), {
  'DESCRIPTOR' : _CONSENSUSINFO,
  '__module__' : 'consensus.maxbft.maxbft_pb2'
  # @@protoc_insertion_point(class_scope:maxbft.ConsensusInfo)
  })
_sym_db.RegisterMessage(ConsensusInfo)

SyncInfo = _reflection.GeneratedProtocolMessageType('SyncInfo', (_message.Message,), {
  'DESCRIPTOR' : _SYNCINFO,
  '__module__' : 'consensus.maxbft.maxbft_pb2'
  # @@protoc_insertion_point(class_scope:maxbft.SyncInfo)
  })
_sym_db.RegisterMessage(SyncInfo)

ProposalData = _reflection.GeneratedProtocolMessageType('ProposalData', (_message.Message,), {
  'DESCRIPTOR' : _PROPOSALDATA,
  '__module__' : 'consensus.maxbft.maxbft_pb2'
  # @@protoc_insertion_point(class_scope:maxbft.ProposalData)
  })
_sym_db.RegisterMessage(ProposalData)

ProposalMsg = _reflection.GeneratedProtocolMessageType('ProposalMsg', (_message.Message,), {
  'DESCRIPTOR' : _PROPOSALMSG,
  '__module__' : 'consensus.maxbft.maxbft_pb2'
  # @@protoc_insertion_point(class_scope:maxbft.ProposalMsg)
  })
_sym_db.RegisterMessage(ProposalMsg)

VoteData = _reflection.GeneratedProtocolMessageType('VoteData', (_message.Message,), {
  'DESCRIPTOR' : _VOTEDATA,
  '__module__' : 'consensus.maxbft.maxbft_pb2'
  # @@protoc_insertion_point(class_scope:maxbft.VoteData)
  })
_sym_db.RegisterMessage(VoteData)

VoteMsg = _reflection.GeneratedProtocolMessageType('VoteMsg', (_message.Message,), {
  'DESCRIPTOR' : _VOTEMSG,
  '__module__' : 'consensus.maxbft.maxbft_pb2'
  # @@protoc_insertion_point(class_scope:maxbft.VoteMsg)
  })
_sym_db.RegisterMessage(VoteMsg)

BlockFetchMsg = _reflection.GeneratedProtocolMessageType('BlockFetchMsg', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKFETCHMSG,
  '__module__' : 'consensus.maxbft.maxbft_pb2'
  # @@protoc_insertion_point(class_scope:maxbft.BlockFetchMsg)
  })
_sym_db.RegisterMessage(BlockFetchMsg)

BlockPair = _reflection.GeneratedProtocolMessageType('BlockPair', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKPAIR,
  '__module__' : 'consensus.maxbft.maxbft_pb2'
  # @@protoc_insertion_point(class_scope:maxbft.BlockPair)
  })
_sym_db.RegisterMessage(BlockPair)

BlockFetchRespMsg = _reflection.GeneratedProtocolMessageType('BlockFetchRespMsg', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKFETCHRESPMSG,
  '__module__' : 'consensus.maxbft.maxbft_pb2'
  # @@protoc_insertion_point(class_scope:maxbft.BlockFetchRespMsg)
  })
_sym_db.RegisterMessage(BlockFetchRespMsg)

ConsensusPayload = _reflection.GeneratedProtocolMessageType('ConsensusPayload', (_message.Message,), {
  'DESCRIPTOR' : _CONSENSUSPAYLOAD,
  '__module__' : 'consensus.maxbft.maxbft_pb2'
  # @@protoc_insertion_point(class_scope:maxbft.ConsensusPayload)
  })
_sym_db.RegisterMessage(ConsensusPayload)

ConsensusMsg = _reflection.GeneratedProtocolMessageType('ConsensusMsg', (_message.Message,), {
  'DESCRIPTOR' : _CONSENSUSMSG,
  '__module__' : 'consensus.maxbft.maxbft_pb2'
  # @@protoc_insertion_point(class_scope:maxbft.ConsensusMsg)
  })
_sym_db.RegisterMessage(ConsensusMsg)

BuildProposal = _reflection.GeneratedProtocolMessageType('BuildProposal', (_message.Message,), {
  'DESCRIPTOR' : _BUILDPROPOSAL,
  '__module__' : 'consensus.maxbft.maxbft_pb2'
  # @@protoc_insertion_point(class_scope:maxbft.BuildProposal)
  })
_sym_db.RegisterMessage(BuildProposal)

WalEntry = _reflection.GeneratedProtocolMessageType('WalEntry', (_message.Message,), {
  'DESCRIPTOR' : _WALENTRY,
  '__module__' : 'consensus.maxbft.maxbft_pb2'
  # @@protoc_insertion_point(class_scope:maxbft.WalEntry)
  })
_sym_db.RegisterMessage(WalEntry)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\"org.chainmaker.pb.consensus.maxbftZ3chainmaker.org/chainmaker/pb-go/v2/consensus/maxbft'
  _BLOCKFETCHSTATUS._serialized_start=1830
  _BLOCKFETCHSTATUS._serialized_end=1886
  _CONSSTATETYPE._serialized_start=1888
  _CONSSTATETYPE._serialized_end=1972
  _MESSAGETYPE._serialized_start=1974
  _MESSAGETYPE._serialized_end=2082
  _QUORUMCERT._serialized_start=84
  _QUORUMCERT._serialized_end=214
  _CONSENSUSINFO._serialized_start=216
  _CONSENSUSINFO._serialized_end=263
  _SYNCINFO._serialized_start=265
  _SYNCINFO._serialized_end=381
  _PROPOSALDATA._serialized_start=384
  _PROPOSALDATA._serialized_end=557
  _PROPOSALMSG._serialized_start=559
  _PROPOSALMSG._serialized_end=654
  _VOTEDATA._serialized_start=657
  _VOTEDATA._serialized_end=833
  _VOTEMSG._serialized_start=835
  _VOTEMSG._serialized_end=918
  _BLOCKFETCHMSG._serialized_start=921
  _BLOCKFETCHMSG._serialized_end=1070
  _BLOCKPAIR._serialized_start=1072
  _BLOCKPAIR._serialized_end=1145
  _BLOCKFETCHRESPMSG._serialized_start=1148
  _BLOCKFETCHRESPMSG._serialized_end=1281
  _CONSENSUSPAYLOAD._serialized_start=1284
  _CONSENSUSPAYLOAD._serialized_end=1536
  _CONSENSUSMSG._serialized_start=1538
  _CONSENSUSMSG._serialized_end=1641
  _BUILDPROPOSAL._serialized_start=1643
  _BUILDPROPOSAL._serialized_end=1713
  _WALENTRY._serialized_start=1715
  _WALENTRY._serialized_end=1828
# @@protoc_insertion_point(module_scope)
